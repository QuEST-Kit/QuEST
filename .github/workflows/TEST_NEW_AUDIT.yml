name: TESTING NEW AUDIT


on:
  push:
    branches:
      - code-cov
  pull_request:
    branches:
      - code-cov


jobs:

  # run and report lcov
  coverage-test:
    name: code coverage

    # test only serial double-precision QuEST on Ubuntu
    runs-on: ubuntu-latest

    # constants
    env:
      build_dir: "build"
      tracefile: "coverage.info"

    # perform the job
    steps:
      - name: Get QuEST
        uses: actions/checkout@v4

      # compile QuEST and unit tests in coverage mode
      - name: Configure CMake
        run: >
          cmake -B ${{ env.build_dir }}
          -DENABLE_TESTING=ON
          -DENABLE_MULTITHREADING=OFF
          -DCMAKE_CXX_FLAGS=--coverage
          -DCMAKE_EXE_LINKER_FLAGS=--coverage

      - name: Compile unit tests
        run: cmake --build ${{ env.build_dir }}

      # run the unit tests, saving coverage data to file
      - name: Run unit tests
        run: ctest -j2 --output-on-failure -R applyHadamard  ########## not waiting for full tst right now
        working-directory: ${{ env.build_dir }}

      # analyse the unit test coverage
      - name: Setup LCOV
        uses: hrishikesh-kadam/setup-lcov@v1

      - name: Run LCOV
        run: lcov --directory . --capture --output-file ${{ env.tracefile }}
        working-directory: ${{ env.build_dir }}

      # remove testing code from coverage data
      - name: Filter LCOV
        run: lcov --remove ${{ env.tracefile }} '*/tests/*' --output-file ${{ env.tracefile }}
        working-directory: ${{ env.build_dir }}
      
      # report coverage of remaining files
      - name: Report code coverage
        uses: zgosalvez/github-actions-report-lcov@v4
        with:
          coverage-files: ${{ env.tracefile }}
          minimum-coverage: 50
          artifact-name: code-coverage-report
          update-comment: true
          github-token: ${{ secrets.GITHUB_TOKEN }}
          working-directory: ${{ env.build_dir }}
