name: Compilation

on:
  push:
    branches:
      - ci-compiling
  pull_request:
    branches:
      - ci-compiling

jobs:

  # test only compilation succeeds (no execution)
  build-test:
    name: Testing compilation
    runs-on: ${{ matrix.os }}

    strategy:
      # continue other jobs if any fail
      fail-fast: false

      # perform job for all combinations of...
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        precision: [1, 2, 4]
        omp: [ON, OFF]
        mpi: [ON, OFF]
        gpu: [ON, OFF]

        # assign each OS a bespoke compiler
        include:
          - os: ubuntu-latest
            compiler: g++
          - os: macos-latest
            compiler: clang++
          - os: windows-latest
            compiler: cl

        # cannot use quad precision on GPU
        exclude:
          - precision: 4
            gpu: ON

    # constants
    env:
      build_dir: "build"
      cuda_arch: 70

    # perform the job
    steps:
      - name: Get QuEST
        uses: actions/checkout@v4

      # obtain OMP for Clang multithreading
      - name: Setup libomp 
        if: ${{ matrix.compiler == 'clang++' && matrix.omp == 'ON' }}
        run: >
          brew install libomp;
          echo "OpenMP_ROOT=$(brew --prefix)/opt/libomp" >> $GITHUB_ENV

      # obtain MPI for distribution
      - name: Setup MPI
        if: ${{ matrix.mpi == 'ON' }}
        uses: mpi4py/setup-mpi@v1

      # obtain CUDA for GPU acceleration
      - name: Setup CUDA
        if: ${{ matrix.gpu == 'ON' }}
        uses: Jimver/cuda-toolkit@v0.2.21

      - name: Configure CMake
        run: >
          cmake -B ${{ env.build_dir }}
          -DENABLE_MULTITHREADING=${{ matrix.omp }}
          -DENABLE_DISTRIBUTION=${{ matrix.mpi }}
          -DENABLE_CUDA=${{ matrix.gpu }}
          -DFLOAT_PRECISION=${{ matrix.precision }}
          -DCMAKE_CXX_COMPILER=${{ matrix.compiler }}
          -DCMAKE_CUDA_ARCHITECTURES=${{ env.cuda_arch }}

      - name: Compile
        run: >
          cmake --build ${{ env.build_dir }}

